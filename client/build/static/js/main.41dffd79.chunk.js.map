{"version":3,"sources":["assets/logo.svg","react-auth0-spa.js","components/auth0.js","components/Header/SignUp.js","views/Home/Home.js","views/NotFound.js","components/Header/NavBar.js","components/BrowseRecipe.js","views/Remedy/Remedy.js","views/Chat/Chat.js","components/GlossaryEdit.js","components/EditUsers.js","components/HomeSub.js","components/ContentEdit.js","components/BookingAdmin.js","views/Admin/Admin.js","views/Book/Book.js","components/BrowseResults.js","views/Browse/Browse.js","views/Chat/Edit.js","components/Footer.js","views/UserHome/UserHome.js","components/CheckoutForm.js","config/stripeConfig.js","views/Checkout/Checkout.js","views/NoAccount/NoAccount.js","components/SubscriptionForm.js","views/Checkout/Subscribe.js","components/Loading.js","App.js","serviceWorker.js","utils/history.js","index.js"],"names":["module","exports","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","Auth0","props","getUrl","baseUrl","protocol","host","href","className","onClick","domain","SignUp","Home","arr","push","name","src","caption","gallery","map","item","index","key","to","NotFound","NavBar","alt","userRole","id","clientId","BrowseRecipe","log","results","temp","sort","b","RecName","entries","result","Modal","size","trigger","Ailment","Content","BodyPart","Description","Ingredients","ingredient","IngName","Amounut","Units","Register","setResults","length","defaultRecipe","e","searchRecipeByBody","type","placeholder","onChange","searchRecipe","getRecipe","loadComment","setMethod","pid","fetch","then","response","json","data","Chat","setCommentMethod","posts","setPosts","curPost","setCurPost","isLoading","refreshList","useHistory","opts","height","width","PlayerVars","autoplay","useParams","comments","setComments","commentIn","setCommentIn","Id","date","Date","Grid","centered","Row","toDateString","getHours","getMinutes","ID","YoutubeID","array","split","videoId","UrlID","url","renderHTML","content","Comment","Group","Header","as","dividing","comment","Author","Metadata","Text","Actions","email","refreshMethod","method","headers","body","JSON","stringify","res","deleteComment","Form","reply","TextArea","event","target","Button","labelPosition","icon","positive","username","nickname","alert","writeComment","negative","deletePost","columns","conlums","Column","Segment","post","textAlign","GlossaryEdit","entryInfo","setEntryInfo","typeEdit","setTypeEdit","setFormReset","messageStatus","setMessageStatus","definition","usage","formContents","setFormContents","options","command","submitDelete","display","Title","success","defaultGlossary","submitEdit","updatedContents","replace","Definition","Usage","referrerPolicy","undefined","toLowerCase","preventDefault","EditUsers","userList","setUserList","shownUser","setShownUser","defaultUserList","setDefaultUserList","warningMessage","setWarning","newUserRole","setNewRole","shownRole","setShownRole","confirmChange","setConfirm","submitted","setSubmitted","userTypes","userType","config","authorization","access","access_token","catch","rej","getUsers","entry","getAuthUserRole","user_id","deleteAuthUserRole","setAuthUserRole","filter","contentLinking","homeLink","getDbListings","contentType","linkListings","setHomeLink","setAboutEntry","setTypeEntry","setLinkListings","setSubmittal","setCounter","counter","setAdd","link","text","inUse","page","HomeSub","aboutEntry","typeEntry","homeImages","setHomeImages","imageListings","setImageListings","homeText","setHomeText","textListings","setTextListings","homeProducts","setHomeProducts","productListings","setProductListings","submittal","add","defaultSubmit","price","defaultValue","submit","checked","updateDbListings","deleteDbListings","addDbListings","ContentEdit","bookingEvents","BookingAdmin","events","setEvents","newEventTitle","setEventTitle","newEventDate","setEventDate","Visible","EventTitle","Token","bid","newarr","d","confirmBooking","Paid","setTitleMethod","setDateMethod","Admin","localizer","momentLocalizer","moment","Book","selectProduct","bookVisible","setBookVisible","setDate","setTitle","displayDate","setTime","getTime","start","end","allDay","paid","eventTitle","verticalAlign","getFullYear","getMonth","getDate","desc","startAccessor","endAccessor","style","Transition","visible","animation","duration","unmountOnHide","onSubmit","token","commitBooking","widths","Input","fluid","label","primary","Icon","fitted","BrowseResults","Browse","slice","searchGlossary","Edit","setUrlMethod","setContentMethod","setContent","setUrl","match","minHeight","tabIndex","onBlur","newContent","classname","editPost","writePost","Footer","UserHome","links","setLinks","setText","images","setImages","products","setProducts","shownLinks","setShownLinks","shownText","setShownText","shownImages","setShownImages","shownProducts","setShownProducts","product","txt","img","image","injectStripe","selectedProduct","stripe","receiptUrl","setReceiptUrl","handleSubmit","createToken","axios","amount","toString","source","receipt_email","order","charge","receipt_url","stripePublicKey","Checkout","scrollTo","uniqueId","script","loader","apiKey","NoAccount","route","useRouteMatch","path","SubscriptionForm","elements","getElement","createPaymentMethod","card","billing_details","payment_method","paymentMethod","message","setSuccess","sub","setUserRole","this","class","Component","Subscribe","Loading","getContentDbListings","setListings","requestOptions","redirect","Array","isArray","updateContentDbListings","listingInfo","err","deleteContentDbListings","addContentDbListings","userId","roles","roleId","role","adminId","subscriberId","premiumId","newRole","users","setRole","App","createBrowserHistory","setAccess","setSelectedProduct","TheHome","TheRemedy","Remedy","TheBooking","TheAdmin","reas","exact","render","component","Boolean","hostname","targetUrl","ReactDOM","audience","client_id","redirect_uri","origin","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41dffd79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// src/react-auth0-spa.js\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\") &&\r\n          window.location.search.includes(\"state=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};","import React from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport \"./auth0.css\";\r\n\r\nconst Auth0 = (props) => {\r\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n  let getUrl = (window.location);\r\n  let baseUrl = getUrl .protocol + \"//\" + getUrl.host + \"/\";\r\n  return (\r\n    <>\r\n      {!isAuthenticated && (\r\n        <a href = \"#\" className = \"login\" onClick={() => loginWithRedirect({})}>Log in</a>\r\n      )}\r\n\r\n      {isAuthenticated && <a href = {`https://${props.domain}/v2/logout?returnTo=${baseUrl}`} className = \"login\" onClick={() => logout()}>Log out</a>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth0;","import React from 'react';\r\nimport Auth0 from \"../auth0.js\";\r\nimport \"./SignUp.css\";\r\n\r\nconst SignUp = (props) => {\r\n    return (\r\n        <div className= \"background\">\r\n            <div className = \"box\">\r\n                <h1>Why Not Consider Herbs?</h1>\r\n                <Auth0 className = \"login\">Login</Auth0>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport logo from '../../assets/logo.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport './Home.css';\r\nimport 'semantic-ui-react';\r\nimport SignUp from \"../../components/Header/SignUp\";\r\n\r\nconst Home = (props) => {\r\n    const arr = [];\r\n    arr.push({\r\n        name: \"Lavender\",\r\n        src: \"logos/Lavender.png\",\r\n        caption:\"Lavender has a long history of use to boost appetite and mood, as well as relieve gastrointestinal problems and anxiety.\"\r\n    },{\r\n        name: \"Eucalyptus\",\r\n        src: \"logos/Eucalyptus.png\",\r\n        caption: \"People use eucalyptus for many conditions including asthma, bronchitis, plaque and gingivitis, head lice, toe nail fungus, and many others\"\r\n    },{\r\n        name: \"Rosemary\",\r\n        src: \"logos/Rosemary.png\",\r\n        caption: \"Anti-cancer properties(for certain cancers) and anti-inflammatory properties,discourages hair loss and boosts growth,improves memory, liver boosting.\"\r\n    });\r\n    const gallery = arr.map((item, index) => {\r\n        return(\r\n        <figure key = {index} className = \"galleryItem\">\r\n            <h2 className = \"galleryTitle\">{item.name}</h2>\r\n            <img className = \"galleryImage\" src = {item.src}></img>\r\n            <figcaption>{item.caption}</figcaption>\r\n        </figure>\r\n    )})\r\n    return (\r\n        <>\r\n            <SignUp />\r\n            <div className=\"about\">\r\n                <h1 className = \"aboutTitle\">About</h1>\r\n                <div className = \"deeContent\">\r\n                    <img src=\"logos/Dee.jpeg\" className=\"dee\" />\r\n                    <p className=\"info\">\r\n                        Welcome to my site. My intentions are to present the information in a fun, inviting easy digestible format. One that will reignite that natural innate desire to return to a more holistic earth based approach to our health and well being. Do you remember your first introduction? Some people started with an oil, other with teas or a fresh herb in a dish. I remember how a few sniffs of a peppermint oil suggested by a friend relieved an headache almost instantly. I was hooked and the desire and passion was born to learn , share and help people experience the joy of listening to our body and healing with nature.\r\n                    </p>  \r\n                </div> \r\n                <h2 className = \"booking\"><Link to ='/Book'>Book Consultation</Link></h2>\r\n            </div>\r\n            <div className = \"herbInspiration\">\r\n                <h2 className = \"inspoTitle\">Herb Inspiration</h2>\r\n                <div className = \"herbGallery\">\r\n                   {gallery}                    \r\n                </div>\r\n                <h2 className = \"findHerbs\"><Link to ='/Browse'>Find More Herbs</Link></h2>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n        return \"Page not found\"\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Auth0 from \"../auth0.js\";\r\nimport './NavBar.css';\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <div className = \"top-header\">\r\n            {/* Logo */}\r\n            <div className = \"social-bar\">\r\n                <Link className = \"nav-title\" to=\"/Home\">\r\n                    <img className = \"main-logo\" src={ \"/logos/considerHerbsLogo.png\" } alt=\"React logo\" />\r\n                </Link>\r\n                <div className = \"social-logos\">\r\n                    {\r\n                        (props.userRole === \"admin\") &&\r\n                        <Link className = \"login\" to=\"/Admin\">\r\n                            Admin Page\r\n                        </Link>\r\n                    }\r\n\r\n                    <Auth0 className = \"login\" \r\n                    domain = {props.domain}\r\n                    id = {props.clientId}\r\n                    user = {props.user}\r\n                    >\r\n                        Login\r\n                    </Auth0>\r\n                    <a className = \"social-link\" href={'https://www.facebook.com/Consider-Herbs-276933896476422/'}>\r\n                        <img className = \"social-image\" src={\"/logos/facebookLogo.svg\"}/>\r\n                    </a>\r\n                    <a className = \"social-link\" href={'https://www.instagram.com/considerherbs/'}>\r\n                        <img className = \"social-image\" src = {\"/logos/instagramLogo.svg\"}/>   \r\n                    </a>\r\n                    <a className = \"social-link\" href={'mailto:dee@considerherbs.com'}>\r\n                        <img className = \"social-image\" src = {\"/logos/emailLogo.svg\"}/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            {/* Page Links */}\r\n            <div className = \"nav-items\">\r\n                <Link className = \"nav-link\" to='/Browse'>\r\n                <img className = \"nav-logo\" src = {\"/logos/browseLogo.svg\"}></img>\r\n                Browse Herbs\r\n                </Link>\r\n                <Link className = \"nav-link\" to='/Remedy'>\r\n                <img className = \"nav-logo\" src = {\"/logos/remedyLogo.svg\"}></img>\r\n                Find a Remedy</Link>\r\n                <Link className = \"nav-link\" to ='/Chat'>\r\n                <img className = \"nav-logo\" src = {\"/logos/chatLogo.svg\"}></img>\r\n                Chat With Others</Link>\r\n                <Link className = \"nav-link\" to ='/Book'>\r\n                <img className = \"nav-logo\" src = {\"/logos/bookLogo.svg\"}></img>\r\n                Book Consultation</Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NavBar;\r\n","import React, {useState} from \"react\";\r\nimport \"./BrowseRecipe.css\";\r\nimport 'semantic-ui-react';\r\nimport {Modal, Button} from 'semantic-ui-react';\r\n\r\nvar test =0;\r\n\r\n\r\nconst BrowseRecipe = (props) => {\r\n    console.log(props.results);\r\n    var temp = props.results? \r\n    props.results.sort((a, b) => (a.RecName > b.RecName) ? 1 : -1) \r\n    : [];\r\n\r\n    const[results, setResults] = useState([]);\r\n\r\n\r\n    const entries = temp.map((result, index) =>{\r\n        return(\r\n            <div key = {index} className = \"entry\">\r\n                <Modal size='small'  trigger={<p className=\"modalTitle\"> <b>Ailment:</b> {result.Ailment}</p>}>\r\n                    <Modal.Content>\r\n                        <p> <b>Ailment:</b> {result.Ailment}</p>\r\n                        <p> <b>Body Part:</b> {result.BodyPart}</p>\r\n                        <p> <b>Recipe Name:</b> {result.RecName}</p>\r\n                        <p> <b>Description:</b> {result.Description}</p>\r\n                        <p> <b>Ingredients:</b></p>\r\n                        {result.Ingredients?<>\r\n                        {\r\n                            result.Ingredients.map(ingredient=>{\r\n                                return(\r\n                                <p key={ingredient.IngName}>- {ingredient.IngName} {ingredient.Amounut} {ingredient.Units}</p>\r\n                                )\r\n                            })\r\n                        }\r\n                        </>:<></>}\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <p> <b>Body Part:</b> {result.BodyPart}</p>\r\n                <p> <b>Recipe Name:</b> {result.RecName}</p>\r\n                <p> <b>Description:</b> {result.Description}</p>\r\n                <p> <b>Ingredients:</b></p>\r\n                {result.Ingredients?<>\r\n                {\r\n                    result.Ingredients.map(ingredient=>{\r\n                        return(\r\n                        <p key={ingredient.IngName}>- {ingredient.IngName} {ingredient.Amounut} {ingredient.Units}</p>\r\n                        )\r\n                    })\r\n                }\r\n                </>:<></>}\r\n            </div>\r\n        );\r\n    });\r\n    return(\r\n        <div className = \"results\">\r\n            {entries}\r\n        </div>\r\n    );\r\n}\r\nexport default BrowseRecipe;\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport logo from '../../assets/logo.svg';\r\nimport './Remedy.css';\r\nimport BrowseRecipe from \"../../components/BrowseRecipe\";\r\nimport {Button} from 'semantic-ui-react';\r\nimport 'semantic-ui-react';\r\n\r\n\r\n\r\n\r\nconst Register = (props) => {\r\n\r\n    const[results, setResults] = useState([]);\r\n    if(results.length == 0) props.defaultRecipe(setResults);\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"remedy\">\r\n                <h1 className = \"remedyTitle\">Find A Remedy</h1>\r\n                <p className=\"pain\">Where is your pain located?</p>\r\n\r\n                <div className='bodyOutline'>\r\n                    <button className='arm' value=\"arm\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"back\" value=\"back\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"chest\" value=\"chest\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"ears\" value=\"ears\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"eyes\" value=\"eyes\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"face\" value=\"face\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"feet\" value=\"feet\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"fingers\" value=\"fingers\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"hands\" value=\"hands\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"head\" value=\"head\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"knee\" value=\"knee\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"legs\" value=\"legs\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"lips\" value=\"lips\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"mouth\" value=\"mouth\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"stomach\" value=\"stomach\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"throat\" value=\"throat\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                    <button className=\"wrist\" value=\"wrist\" onClick = {e => props.searchRecipeByBody(e, setResults)}></button>\r\n                </div>\r\n                <p></p>\r\n                <p className=\"suggestRecipe\">Suggested Recipes</p> \r\n                <div className =\"searchBar\">\r\n                    <img src = \"logos/search.png\"/>\r\n                    <input type = \"text\" placeholder = \"Search By Ailment\" onChange = {e => props.searchRecipe(e, setResults)}/>\r\n                </div> \r\n                <BrowseRecipe\r\n                    results = {results}\r\n                    getRecipe ={props.getRecipe}\r\n                />\r\n\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\nexport default Register;","import React, {useState, useEffect} from 'react';\r\nimport {Form, Transition, Button, Icon, Grid, Comment, Segment, Sticky, Header} from 'semantic-ui-react';\r\nimport 'semantic-ui-react';\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport { Link, useParams, useRouteMatch, useHistory } from 'react-router-dom';\r\nimport './Chat.css';\r\nimport Youtube from 'react-youtube';\r\nimport renderHTML from 'react-render-html';\r\n\r\nconst listPost = (setMethod) => {\r\n    fetch(`/api/db/post/`).then(\r\n            (response)=>{\r\n                (response.json().then(data =>{\r\n                    setMethod(data.data);\r\n            }))\r\n    });\r\n}\r\n\r\nconst readPost = (setMethod,id,setCommentMethod) => {\r\n    fetch(`/api/db/post/`+id).then(\r\n            (response)=>{\r\n                (response.json().then(data =>{\r\n                    setMethod(data.data);\r\n                    loadComment(setCommentMethod, id);\r\n            }))\r\n    });\r\n}\r\n\r\nconst deletePost = (id, refreshMethod) => {\r\n    fetch(`/api/db/post/delete/`+id,{\r\n        method: 'DELETE',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n        Id:id\r\n})\r\n    }).then((res)=>{\r\n        refreshMethod();\r\n    });;\r\n}\r\n\r\nconst writeComment = (pid, content, user, setMethod) => {\r\n    if(!user) {\r\n        alert(\"you need to sign in!\");\r\n        return;\r\n    }\r\n    fetch(`/api/db/post/`+pid+`/reply/write`,{\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n        title:\"\",\r\n        content:content,\r\n        name:user.name,\r\n        username:user.nickname,\r\n        email:user.email\r\n})\r\n    }).then((res)=>{\r\n        loadComment(setMethod,pid);\r\n    })\r\n}\r\n\r\nconst loadComment = (setMethod, pid) => {\r\n    fetch(`/api/db/post/`+pid+`/reply`).then(\r\n            (response)=>{\r\n                (response.json().then(data =>{\r\n                    setMethod(data.data);\r\n                    console.log(data.data);\r\n            }))\r\n    });\r\n}\r\n\r\nconst deleteComment = (id, refreshMethod,setCommentMethod,pid) => {\r\n    fetch(`/api/db/post/reply/delete/`,{\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n        id:id\r\n})\r\n    }).then((res)=>{\r\n        refreshMethod(setCommentMethod, pid);\r\n    });;\r\n}\r\nconst Chat = (props) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [curPost, setCurPost] = useState({});\r\n    const { isLoading, user, loginWithRedirect, logout} = useAuth0();\r\n    const history = useHistory();\r\n    const refreshList = () => {\r\n        listPost(setPosts);\r\n    } \r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        PlayerVars:{\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 1,\r\n        }\r\n    };\r\n    const UrlID = (ID) =>\r\n    {\r\n        if(!ID || ID === \"\")\r\n        {\r\n            console.log(ID);\r\n        }\r\n        else\r\n        {\r\n        var YoutubeID;\r\n        console.log(ID);\r\n        var array = ID.split(\"/\");\r\n        if(array[2] === \"www.youtube.com\")\r\n        {\r\n        console.log(array.length);\r\n             if(array.length === 4)\r\n                {\r\n                var id = array[3];\r\n                var temp = id.split(\"=\");\r\n                if(temp.length > 0)\r\n                {\r\n                    console.log(temp[1]);\r\n                    YoutubeID = temp[1];\r\n                }\r\n                else\r\n                {\r\n                    console.log(temp[0]);\r\n                    YoutubeID = temp[0];\r\n                }\r\n                console.log(array[1]);\r\n             }\r\n             else\r\n                {\r\n                console.log(\"error\");\r\n                }\r\n             return(\r\n            <Youtube videoId={YoutubeID} opts={opts}/>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    const {pid} = useParams();\r\n    const [comments, setComments] = useState([]);\r\n    const [commentIn, setCommentIn] = useState(\"\");\r\n    //if(!user)\r\n    //return(<><h1>you need to sign in!</h1></>)\r\n    //else\r\n    //console.log(pid);\r\n    if(pid)\r\n    {\r\n        if(!curPost || !curPost.Id || curPost.Id != pid)\r\n            readPost(setCurPost, pid,setComments);\r\n        if(curPost && curPost.Id) {\r\n        const date = new Date(curPost.Date);\r\n        return (\r\n        <>\r\n            <Grid centered className='grid4'>\r\n                <Grid.Row>\r\n                    <div className=\"postTitle\">\r\n                        <h1>{curPost.title}</h1>\r\n                        <p>by: {curPost.name}</p>\r\n                        <p>{date.toDateString() + \" \"+ date.getHours() + \":\" + date.getMinutes()}</p>\r\n                    </div>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <div className=\"postContent\">\r\n                        \r\n                        <div className=\"contentSection\">\r\n                        {\r\n                         UrlID(curPost.url)\r\n                        }\r\n                        {renderHTML(curPost.content)}\r\n                        </div>\r\n\r\n                        <Comment.Group size=\"mini\">\r\n                            <Header as='h5'dividing>Comments</Header>\r\n                            {\r\n                                comments.map((comment)=>{\r\n                                    const date = new Date(comment.Date);\r\n                                    return(\r\n                                        <>\r\n                                            <Comment>\r\n                                                <Comment.Content>\r\n                                                    <Comment.Author>{comment.name}</Comment.Author>\r\n                                                    <Comment.Metadata>\r\n                                                    <div>{date.toDateString() + \" \"+ date.getHours() + \":\" + date.getMinutes()}</div>\r\n                                                    </Comment.Metadata>\r\n                                                    <Comment.Text>{comment.content}</Comment.Text>\r\n                                                    <Comment.Actions>{(user && user.email == curPost.email)?<a onClick={()=>deleteComment(comment.Id, loadComment, setComments, curPost.Id)}>delete</a>:<></>}</Comment.Actions>\r\n                                                </Comment.Content>\r\n                                            </Comment>\r\n                                        </>\r\n                                    );\r\n                                })\r\n                            }\r\n                            <Form reply>\r\n                                <Form.TextArea value={commentIn} onChange={(event)=>{setCommentIn(event.target.value)}} />\r\n                                <Button size='small' content='Add Reply' labelPosition='left' icon='edit' positive onClick={()=>{writeComment(curPost.Id,commentIn,user,setComments); setCommentIn(\"\");}} />\r\n                            </Form>\r\n                            <p></p>\r\n                            {(user && user.email == curPost.email)?<Link to={\"/Chat\"}><Button size='small' negative onClick={()=>{deletePost(curPost.Id, refreshList)}}>Delete Post</Button></Link>:<></>}\r\n                            {(user && user.email == curPost.email)?<Link to={\"/Edit/\"+curPost.Id}><Button size='small'>Edit Post</Button></Link>:<></>}\r\n                            <p></p>\r\n                            <Link to=\"/Chat\"><Button size='small'>Back To All Posts</Button></Link>\r\n                        </Comment.Group>\r\n\r\n                    </div>\r\n                </Grid.Row>\r\n                <Grid.Row></Grid.Row>\r\n            </Grid>\r\n        </>\r\n        );}\r\n        else\r\n        return (\r\n        <>\r\n            post not found\r\n        </>\r\n        )\r\n    }\r\n    else{\r\n        if(posts.length == 0)\r\n            refreshList();\r\n    return (\r\n        <>\r\n        <p></p>\r\n        <Grid className=\"grid2\" columns='equal' conlums={2}>\r\n            <Grid.Row centered>\r\n                <h1 className=\"title\" >Join The Discussion Below</h1>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column width={10}>\r\n                    <div className=\"postRow\">\r\n                        <h1 className=\"postsTitle\">Recent Posts ({posts.length})</h1>\r\n                        <div className=\"segmentGroup\">\r\n                            <Segment.Group>\r\n                                {\r\n                                    posts.map(post=>{\r\n                                        const date = new Date(post.Date);\r\n                                        return(\r\n                                            <>\r\n                                                <Segment textAlign='center'>\r\n                                                        <h3><a href={\"/Chat/\"+post.Id} className='titleLink'>{post.title}</a></h3>\r\n                                                        <p>{post.name}</p>\r\n                                                        <p>{date.toDateString() + \" \"+ date.getHours() + \":\" + date.getMinutes()}</p>\r\n                                                \r\n                                                </Segment>\r\n                                            </>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Segment.Group>\r\n                        </div>\r\n                    </div>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column textAlign=\"center\">\r\n                    <div className=\"buttonRow\">\r\n                        <p></p>\r\n                        {\r\n                    ((props.userRole === \"guest\") || (props.userRole === \"subscriber\")) &&\r\n                        <div className=\"signUp2\">\r\n                            <h1>Premium User</h1>\r\n                            <h2>$10 / month</h2>\r\n                            <p></p>\r\n                            <Link to='/Subscribe'><Button positive  size=\"small\" className=\"button\">Become A Premium Member</Button></Link>\r\n                            <p></p>\r\n                            <p>Unlimited Recipe and Herb Glossary Access</p>\r\n                            <p>View All Online Videos and Classes</p>\r\n                        </div>\r\n                        }\r\n                        <p></p>\r\n                        \r\n                        {(user)?<Link to={\"/Write\"}><Button  positive size=\"massive\" className=\"postButton\" centered>Write Your Own Post</Button></Link>:<></>}\r\n                    \r\n                    </div>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n\r\n\r\n;","import React, { useState } from 'react';\r\nimport './GlossaryEdit.css';\r\n\r\nconst GlossaryEdit = (props) => {\r\n    const [results, setResults] = useState([]); //holds array of  glossary content from database\r\n    const [entryInfo, setEntryInfo] = useState(null);// holds value of selected glossary item\r\n    const [typeEdit, setTypeEdit] = useState('Edit'); //holds the type of change that will be made to the glossary\r\n    const [formReset, setFormReset] = useState('');\r\n    const [messageStatus, setMessageStatus] = useState(''); //message to display when submitting form fails/ passes\r\n    const [formContents, setFormContents] = useState({\r\n        title: '',\r\n        definition:'',\r\n        usage:''\r\n    });\r\n    ///// Sets value for \"Edit, Add, Delete\" Array\r\n    const commands = ['Edit','Add','Delete'];\r\n    const options = commands.map((command,index) => {\r\n        return(\r\n            <option key = {index} value = {command}>{command}</option>\r\n        );\r\n    });\r\n    ///////function to delete elements from glossary  /////////\r\n    const submitDelete = async (formContents, display = true) => {\r\n        if(!formContents){\r\n            setMessageStatus(\"Please pick an entry to delete\");\r\n            return;\r\n        }\r\n        const response = await fetch(`/api/db/glossary/delete/${formContents.Title}`, {\r\n          method: 'DELETE'\r\n        });\r\n        var res = (await response.json());\r\n        if(res.success){\r\n            if(display)\r\n                setMessageStatus(\"Entry has been deleted\");\r\n            setEntryInfo(null);\r\n        }\r\n        else \r\n        if(display) \r\n            setMessageStatus(\"Error: Entry has not been deleted\");\r\n        props.defaultGlossary(setResults);\r\n    }\r\n    /////// function to add/ edit elements in glossary  ///////\r\n    const submitEdit = async (formContents) => {\r\n        if(!entryInfo && typeEdit == \"Edit\"){\r\n            setMessageStatus(\"Please pick an entry to edit\");\r\n            return;\r\n        }\r\n        var updatedContents = formContents;\r\n        if(typeEdit == \"Edit\"){\r\n            updatedContents = {\r\n                title: formContents.title.replace(/\\s/g,'') != '' ? formContents.title : entryInfo.Title,\r\n                definition: formContents.definition.replace(/\\s/g,'') != '' ? formContents.definition : entryInfo.Definition,    \r\n                usage: formContents.usage.replace(/\\s/g,'') != '' ? formContents.usage : entryInfo.Usage\r\n            };\r\n            await submitDelete(entryInfo, false);\r\n        }\r\n        const response = await fetch(`/api/db/glossary/insert`,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        referrerPolicy: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(updatedContents) // body data type must match \"Content-Type\" header\r\n        });\r\n        var res = (await response.json());\r\n        if(res.success){\r\n            typeEdit == \"Add\" ? setMessageStatus(\"Entry has been added\") : setMessageStatus(\"Entry has been edited\");\r\n        }\r\n        else \r\n            setMessageStatus(\"Error: Entry has not been added\");\r\n        props.defaultGlossary(setResults);\r\n    }\r\n    \r\n    ///// Populating the glossary list with items\r\n    if(results.length == 0) props.defaultGlossary(setResults);\r\n    var temp = results != undefined ? results.sort((a, b) => (a.Title.toLowerCase() > b.Title.toLowerCase()) ? 1 : -1) : []; //set temp variable to the glossary results ONLY if the results variable is not empty \r\n    const entries = temp.map((result, index) =>{\r\n        return(\r\n            <div key = {index} className = \"editEntry\" onClick = {() => {setEntryInfo(result);}}>\r\n                <a href = \"#\">\r\n                    {result.Title}\r\n                </a>\r\n            </div>\r\n        );\r\n    });\r\n  return(\r\n        <div className = \"adminPanel\" id = \"glossaryEdit\"> {/*Holds all glossary editing content */}\r\n            <h2 className = \"glossaryTitle\">Edit Glossary</h2>\r\n            <form className = \"infoEdit\"> {/*holds everything but the interactive glossary list */}\r\n                <select onChange = {e => { \r\n                        //when the type of edit (add edit delete) changes, set the state and reset the form\r\n                        setTypeEdit(e.target.value);\r\n                        setFormReset('reset');\r\n                        setMessageStatus('');\r\n                        setEntryInfo(null);\r\n                    }} className = \"typeEdit\">\r\n                    {options}\r\n                </select>\r\n                {\r\n                    entryInfo && typeEdit != \"Add\" &&\r\n                    <>\r\n                    {/* When the editing or deleting you must be able to see the listing available to take action on, this displays the info from those listings */}\r\n                        <div className = \"entryInfo\">\r\n                            <h2> {entryInfo.Title}</h2> \r\n                            <p><b>Definition:</b> {entryInfo.Definition}</p>\r\n                            <p><b>Usage:</b> {entryInfo.Usage}</p>\r\n                        </div>\r\n                        \r\n                    </>\r\n                }\r\n                {\r\n                    (typeEdit == \"Edit\" || typeEdit == \"Add\") &&\r\n                    <>\r\n                    {/* When editing/ adding you must be able to submit the new content that you want to display, that content will be written in the following inputs */}\r\n                        <label>New Title</label>\r\n                        <input type = \"text\" placeholder = \"Title\" onChange = {e => setFormContents({\r\n                            //This is the info that will be used on submital of this form\r\n                            title: e.target.value,\r\n                            definition: formContents.definition,\r\n                            usage: formContents.usage\r\n                        })}/>\r\n                        <label>New Definition</label>\r\n                        <input type = \"text\" placeholder = \"Definition\" onChange = {e => setFormContents({\r\n                            title: formContents.title,\r\n                            definition: e.target.value,\r\n                            usage: formContents.usage\r\n                        })}/>\r\n                        <label>New Usage</label>\r\n                        <input type = \"text\" placeholder = \"Usage\" onChange = {e => setFormContents({\r\n                            title: formContents.title,\r\n                            definition: formContents.definition,\r\n                            usage: e.target.value\r\n                        })}/>\r\n                        <button onClick = {e => {\r\n                            e.preventDefault();\r\n                            submitEdit(formContents);\r\n                        }} className = \"submitEdit\">Submit</button>\r\n                    </>\r\n                }\r\n                {\r\n                    typeEdit == \"Delete\" &&\r\n                    <button onClick = {e => {\r\n                        e.preventDefault();\r\n                        submitDelete(entryInfo);\r\n                    }}>Delete this Entry</button>\r\n                }\r\n                {messageStatus != '' && <p className = \"messageStatus\">{messageStatus}</p>}\r\n            </form>\r\n            { \r\n                (typeEdit == \"Edit\" || typeEdit == \"Delete\") &&\r\n                <div className = \"entries\">\r\n                    {entries}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default GlossaryEdit;","import React, { useState } from 'react';\r\nimport './EditUsers.css';\r\nconst getUsers = (props, setUserList, setDefaultUserList) => {\r\n        //get a list of users\r\n        fetch(`https://${props.config.domain}/api/v2/users`,{\r\n        headers: {authorization: \"Bearer \" + props.access.access_token}\r\n        }).then(res => res.json().then(data => {\r\n            setUserList(data);\r\n            setDefaultUserList(data);\r\n        })).catch(rej=>console.log(rej));\r\n}\r\nconst EditUsers = (props) => {\r\n    const [userList, setUserList]  = useState(null);\r\n    const [shownUser, setShownUser] = useState(null);\r\n    const [defaultUserList, setDefaultUserList] = useState([]);\r\n    const [warningMessage, setWarning] = useState(false);\r\n    const [newUserRole, setNewRole] = useState(\"admin\");\r\n    const [shownRole, setShownRole] = useState(\"\");\r\n    const [confirmChange, setConfirm] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    let userTypes = [\"Admin\" , \"Subscriber\", \"Premium\"];\r\n    userTypes = userTypes.map((userType, index) =>{\r\n        return(\r\n            <option key = {index} value = {userType.toLowerCase()}>{userType}</option>\r\n        );\r\n    });\r\n\r\n    if(props.isAuthenticated && !userList){\r\n        getUsers({...props}, setUserList, setDefaultUserList);\r\n    }\r\n    var entries = [];\r\n    if(userList){\r\n        entries = userList.map((entry, index) => {\r\n            return(\r\n                <div key = {index} className = \"editEntry\" onClick = {() => {\r\n                    setShownUser(entry);\r\n                    props.getAuthUserRole(entry.user_id, props.config, setShownRole, props.access);\r\n                    setConfirm(false);\r\n                    setWarning(false);\r\n                    setSubmitted(false);\r\n                }}>\r\n                    <a href = \"#\">\r\n                        {entry.name}\r\n                    </a>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    return(\r\n        \r\n        <div className = \"adminPanel editUsers\">\r\n            <h2 className = \"adminHeader\">Manage Users</h2>\r\n            {\r\n            shownUser &&\r\n            <div className = \"entryInfo userEntry\">\r\n                <h2> {shownUser.name}</h2> \r\n                <p><b>Email:</b> {shownUser.email}</p>\r\n                <p><b>Role:</b> {shownRole}</p>\r\n                <select type = \"select\" \r\n                className = \"typeEdit\"\r\n                onChange = {e => {\r\n                    setNewRole(e.target.value);\r\n                }}>\r\n                    {userTypes}\r\n                </select>\r\n                \r\n                <button \r\n                className = {`editSubmit ${confirmChange ? \" hidden\" : \"\"}`}\r\n                onClick = {e => {\r\n                    e.preventDefault()\r\n                    if(!warningMessage){\r\n                        setWarning(true);\r\n                        setConfirm(true);\r\n                        setSubmitted(false);\r\n                    }\r\n                }}>Submit</button>\r\n                {\r\n                    warningMessage &&\r\n                    <>\r\n                        <p>Are you sure you want to change this users role to {newUserRole} ?</p>\r\n                        <button\r\n                        className = \"editSubmit\" \r\n                        onClick ={e =>{\r\n                            e.preventDefault();\r\n                            setConfirm(false);\r\n                            setWarning(false);\r\n                            setSubmitted(true);\r\n                            //delete previous role\r\n                            props.deleteAuthUserRole(shownUser.user_id, [shownRole], props.config, props.access);\r\n                            //add new role\r\n                            props.setAuthUserRole(shownUser.user_id,newUserRole,props.config, props.access);\r\n                            //update role\r\n                            setShownRole(newUserRole);\r\n                        }}>\r\n                            Yes\r\n                        </button>\r\n                    </>\r\n                }\r\n                {\r\n                    submitted &&\r\n                    <p>Submitted!</p>\r\n                }\r\n            </div>\r\n            }\r\n            <input type = \"text\" \r\n            placeholder = \"Search\"\r\n            onChange = {e => {\r\n                setUserList(defaultUserList.filter(user => user.name.toLowerCase().includes(e.target.value.toLowerCase())));\r\n            }}/>\r\n            <div className = \"entries\">\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default EditUsers;","import React, { useState } from 'react';\r\nimport \"./HomeSub.css\";\r\n\r\n//making this function is literallyone of the stupidest things ive every done omg\r\n//like fuck bro\r\nconst contentLinking = (homeLink, getDbListings, contentType, linkListings, setHomeLink, setAboutEntry, setTypeEntry, setLinkListings, setSubmittal, setCounter, counter, setAdd) => {\r\n    if(!homeLink)\r\n        (getDbListings(contentType, \"userHome\", setHomeLink));\r\n    else if(!linkListings && homeLink[0]){\r\n        let list = homeLink.map((link, index) =>{\r\n            return(\r\n                <div key = {index} className = \"editEntry editContentEntry\" onClick = {() => {\r\n                    setAboutEntry(link);\r\n                    setCounter(counter++);\r\n                    setAdd(false);\r\n                    setTypeEntry(contentType);\r\n                    setSubmittal({\r\n                        name: link.name ? link.name : null,\r\n                        src: link.src ? link.src : null,\r\n                        alt: link.alt ? link.alt : null,\r\n                        title: link.title ? link.title : null,\r\n                        caption: link.caption ? link.caption : null,\r\n                        text: link.text ? link.text : null,\r\n                        inUse: link.inUse ? link.inUse : null,\r\n                        id: link.id ? link.id : null,\r\n                        page: link.page ? link.page : null\r\n                    });\r\n                }}>\r\n                    <p>\r\n                    {\r\n                        (contentType === \"Text\") &&\r\n                        link.title\r\n                    }\r\n                    {\r\n                        (contentType === \"Images\") &&\r\n                        link.alt\r\n                    }\r\n                    {\r\n                        ((contentType === \"Links\")||(contentType === \"Products\") ) &&\r\n                        link.name\r\n                    }\r\n                    </p>\r\n                    <p>{contentType}</p>\r\n                </div>\r\n            );\r\n        });        \r\n        setLinkListings(list);\r\n    }\r\n}\r\n\r\nconst HomeSub = (props) => {\r\n    const [aboutEntry, setAboutEntry] = useState(null);\r\n    const [typeEntry, setTypeEntry] = useState(null);\r\n    const [homeImages, setHomeImages] = useState(null);\r\n    const [imageListings, setImageListings] = useState(null);\r\n    const [homeText, setHomeText] = useState(null);\r\n    const [textListings, setTextListings] = useState(null);\r\n    const [homeLink, setHomeLink] = useState(null);\r\n    const [linkListings, setLinkListings] = useState(null);\r\n    const [homeProducts, setHomeProducts] = useState(null);\r\n    const [productListings, setProductListings] = useState(null);\r\n    const [submittal, setSubmittal] = useState({});\r\n    const [counter, setCounter] = useState(0);\r\n    const [add, setAdd] = useState(false);\r\n    const defaultSubmit = {\r\n        name: null,\r\n        src: null,\r\n        alt: null,\r\n        title: null,\r\n        caption: null,\r\n        text: null,\r\n        inUse: null,\r\n        id: null,\r\n        page: \"userHome\",\r\n        price: 0\r\n    };\r\n\r\n    //initializing content DB info for text, links, and images\r\n    contentLinking(homeLink, props.getDbListings, \"Links\", linkListings, setHomeLink, setAboutEntry, setTypeEntry, setLinkListings, setSubmittal, setCounter, counter, setAdd);\r\n    contentLinking(homeImages, props.getDbListings, \"Images\", imageListings, setHomeImages, setAboutEntry, setTypeEntry, setImageListings, setSubmittal, setCounter, counter, setAdd);\r\n    contentLinking(homeText, props.getDbListings, \"Text\", textListings, setHomeText, setAboutEntry, setTypeEntry, setTextListings, setSubmittal, setCounter, counter, setAdd);\r\n    contentLinking(homeProducts, props.getDbListings, \"Products\", productListings, setHomeProducts, setAboutEntry, setTypeEntry, setProductListings, setSubmittal, setCounter, counter, setAdd);\r\n    return(\r\n        <div className = \"pageChoice\">\r\n                {\r\n                    aboutEntry &&\r\n                    <div className = \"entryInfo contentEntryInfo\" key = {counter}>\r\n                    {/* This div shows up when a listing is clicked. */}\r\n                    {\r\n                        add &&\r\n                        <>\r\n                            <h3>Add Content</h3>\r\n                            <select onChange = {e => {\r\n                                e.preventDefault();\r\n                                setTypeEntry(e.target.value);\r\n                                setAboutEntry({});\r\n                                setSubmittal(defaultSubmit);\r\n                            }}>\r\n                                <option value =\"Text\">text</option>\r\n                                <option value =\"Images\">image</option>\r\n                                <option value =\"Links\">link</option>\r\n                                <option value =\"Products\">product</option>\r\n                            </select>\r\n\r\n                        </>\r\n                    }\r\n                        {\r\n                            (typeEntry == \"Text\") &&\r\n                            <>  \r\n                                <label><b>Title:</b> </label>\r\n                                <input type = \"text\" defaultValue = {submittal.title} className = \"submitInput\" onChange = {e =>{\r\n                                    let submit = submittal;\r\n                                    submit.title = e.target.value;\r\n                                    setSubmittal(submit);\r\n                                }}\r\n                                />\r\n                                <label><b>Text:</b> </label>\r\n                                <textarea className = \"submitInput\" defaultValue = {submittal.text}\r\n                                onChange = {e =>{\r\n                                    let submit = submittal;\r\n                                    submit.text = e.target.value;\r\n                                    setSubmittal(submit);\r\n                                }}\r\n                                />\r\n                            </>\r\n                        }\r\n                        {\r\n                            ((typeEntry === \"Images\") || (typeEntry === \"Products\")) &&\r\n                            <>\r\n                                <label><b>Alt Text:</b> </label>\r\n                                <input type = \"text\" defaultValue = {submittal.alt} className = \"submitInput\" onChange = {e =>{\r\n                                    let submit = submittal;\r\n                                    submit.alt = e.target.value;\r\n                                    setSubmittal(submit);\r\n                                }}\r\n                                />\r\n                            </>\r\n                        }\r\n                        {\r\n                            ((typeEntry === \"Links\") || (typeEntry === \"Products\")) &&\r\n                            <>\r\n                                <label><b>Name:</b> </label>\r\n                                <input type = \"text\" defaultValue = {submittal.name} className = \"submitInput\" onChange = {e =>{\r\n                                    let submit = submittal;\r\n                                    submit.name = e.target.value;\r\n                                    setSubmittal(submit);\r\n                                }}\r\n                                />                                \r\n                            </>\r\n                        }\r\n                        {\r\n                            (typeEntry === \"Products\") &&\r\n                            <>\r\n                                <label><b>Price:</b> </label>\r\n                                <input type = \"number\" defaultValue = {submittal.price} className = \"submitInput\" onChange = {e =>{\r\n                                    let submit = submittal;\r\n                                    submit.price = e.target.value;\r\n                                    setSubmittal(submit);\r\n                                }}\r\n                                />\r\n                            </>\r\n                        }\r\n                        {\r\n                            (typeEntry != \"Text\") &&\r\n                            <>\r\n                                <label><b>Src:</b> </label>\r\n                                <input type = \"text\" defaultValue = {submittal.src} className = \"submitInput\" onChange = {e =>{\r\n                                    let submit = submittal;\r\n                                    submit.src = e.target.value;\r\n                                    setSubmittal(submit);\r\n                                }}\r\n                                />\r\n                                <label><b>Caption:</b> </label>\r\n                                <input type = \"text\" defaultValue = {submittal.caption} className = \"submitInput\" onChange = {e =>{\r\n                                    let submit = submittal;\r\n                                    submit.caption = e.target.value;\r\n                                    setSubmittal(submit);\r\n                                }}\r\n                                />\r\n                                \r\n                            </>\r\n                        }\r\n                        {\r\n                            aboutEntry.inUse &&\r\n                            <p><b>Position on page:</b> {aboutEntry.inUse}</p>\r\n                        }\r\n                        {\r\n                            !aboutEntry.inUse &&\r\n                            <p><b>Not currently in use</b></p>\r\n                        }\r\n                        <label><b>Show on Page?:</b> </label>\r\n                        <input type = \"checkbox\" defaultValue = {submittal.caption} className = \"submitInput\" onChange = {e =>{\r\n                            let submit = submittal;\r\n                            submit.inUse = e.target.checked ? true : false;\r\n                            setSubmittal(submit);\r\n                        }}\r\n                        />\r\n                        {\r\n                            !add &&\r\n                            <div className = \"contentButtons\">\r\n                                <button onClick = {e => {\r\n                                    e.preventDefault();\r\n                                    props.updateDbListings(typeEntry, submittal);\r\n                                    setAboutEntry(null);\r\n                                }}>Submit</button>\r\n                                <button onClick = {e => {\r\n                                    e.preventDefault();\r\n                                    props.deleteDbListings(typeEntry,submittal.id)\r\n                                    setAboutEntry(null);\r\n                                    \r\n                                }}>\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            add &&\r\n                            <button onClick = {e => {\r\n                            e.preventDefault();\r\n                            props.addDbListings(typeEntry,submittal);\r\n                            setAboutEntry(null);\r\n                            setAdd(false);\r\n                            setSubmittal(defaultSubmit);\r\n                            }}>Add</button>\r\n\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className= \"entries contentEntry\">\r\n                    {\r\n                        imageListings && \r\n                        imageListings\r\n                    }\r\n                    {\r\n                        textListings &&\r\n                        textListings\r\n                    }\r\n                    {\r\n                        linkListings &&\r\n                        linkListings\r\n                    }\r\n                    {\r\n                        productListings &&\r\n                        productListings\r\n                    }\r\n                </div>\r\n                <button className = \"addNewListing\" onClick = {e => {\r\n                    e.preventDefault();\r\n                    setTypeEntry(\"Text\");\r\n                    setAboutEntry({});\r\n                    setCounter(counter+1);\r\n                    setSubmittal(defaultSubmit);\r\n                    setAdd(true);\r\n                    \r\n                }}>Add</button>\r\n        </div>\r\n    );\r\n}\r\nexport default HomeSub;","import React, { useState } from 'react';\r\nimport HomeSub from './HomeSub';\r\nimport './ContentEdit.css';\r\n\r\nconst ContentEdit = (props) => {\r\n    return(\r\n        <div className = \"contentEdit adminPanel\">\r\n            <h2 className = \"adminHeader\">Manage Content</h2>\r\n            <HomeSub \r\n            getDbListings = {props.getDbListings}\r\n            updateDbListings = {props.updateDbListings}\r\n            deleteDbListings = {props.deleteDbListings}\r\n            addDbListings = {props.addDbListings}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default ContentEdit;","import React, { useState } from 'react';\r\nimport './BookingAdmin.css';\r\nconst bookingEvents = (setMethod) => {\r\n    fetch(`/api/db/booking/admin/`).then(\r\n            (response)=>{\r\n                (response.json().then(data =>{\r\n                    console.log(data.data);\r\n                    setMethod(data.data);\r\n            }))\r\n    });\r\n}\r\nconst confirmBooking = (bid, array, setMethod) => {\r\n    var newarr = [];\r\n    array.map(d=>{\r\n        if(d.Id != bid)\r\n            newarr.push(d);\r\n    });\r\n    setMethod(newarr);\r\n    fetch(`/api/db/booking/admin/confirm`,{\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({id:bid})\r\n    }).then((res)=>{bookingEvents(setMethod)});\r\n}\r\n\r\nconst addEvent = (title, date, setTitleMethod, setDateMethod) => {\r\n    if(title ==\"\" || date == \"\") {\r\n        alert(\"please fill required form\");\r\n        return;\r\n    }\r\n    fetch(`/api/db/booking/admin/insert`,{\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(\r\n        {\r\n            \"token\": \"\",\r\n            \"title\": title,\r\n            \"comment\":\"\",\r\n            \"date\":date\r\n        }\r\n    )\r\n    }).then((res)=>{\r\n    setTitleMethod(\"\");\r\n    setDateMethod(\"\");\r\n    });\r\n}\r\n\r\nconst BookingAdmin = (props) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [newEventTitle, setEventTitle] = useState(\"\");\r\n    const [newEventDate, setEventDate] = useState(\"\");\r\n    if(events.length == 0)\r\n        bookingEvents(setEvents);\r\n  return(\r\n        <div className = \"adminPanel bookingAdmin\"> {/*Holds all glossary editing content */}\r\n            <h2 className = \"glossaryTitle\">Booking</h2>\r\n            <h3>Bookings to be confirmed</h3>\r\n            <div className = \"entryInfo\">\r\n                {\r\n                    events.map(data=>{\r\n                        if(data.Visible==0 && data.Date)\r\n                        return(<div>\r\n                            {data.EventTitle} by {data.Token}({data.Comment})<br></br> for {data.Date} <button onClick={()=>confirmBooking(data.Id, events, setEvents)}>confirm</button>\r\n                        </div>)\r\n                    })\r\n                }\r\n            </div>\r\n            <h3>Confirmed Bookings and Events</h3>\r\n            <div className = \"entryInfo\">\r\n                {\r\n                    events.map(data=>{\r\n                        if(data.Visible==1 && data.Date)\r\n                        return(<div>\r\n                            - {data.EventTitle} {(data.Token !=\"\")?<>by {data.Token}({data.Comment})<br></br> for {data.Date} {(data.Paid==1)?<a className=\"paid\">paid</a>:<a className=\"unpaid\">unpaid</a>}</>:<> for {data.Date}</>}\r\n                        </div>)\r\n                    })\r\n                }\r\n            </div>\r\n            <h3>Add event to calendar</h3>\r\n            <p>Title: <input onChange={(event)=>setEventTitle(event.target.value)} value={newEventTitle} ></input></p>\r\n            <p>Date: <input type='date' onChange={(event)=>setEventDate(event.target.value)} value={newEventDate}></input></p>\r\n            <p><button onClick={()=>{addEvent(newEventTitle, newEventDate, setEventTitle, setEventDate)}}>Add</button></p>\r\n        </div>\r\n    );\r\n}\r\nexport default BookingAdmin;","import React, { useState } from 'react';\r\nimport GlossaryEdit from './../../components/GlossaryEdit';\r\nimport EditUsers from './../../components/EditUsers';\r\nimport ContentEdit from './../../components/ContentEdit';\r\nimport BookingAdmin from './../../components/BookingAdmin';\r\n\r\n\r\nimport './Admin.css';\r\nconst Admin = (props) => {\r\n    return(\r\n        <div className = \"admin\">\r\n            <div className = \"adminCol\">\r\n                <GlossaryEdit {...props}/>\r\n                <ContentEdit {...props}/>\r\n            </div>\r\n            <div className = \"adminCol\">\r\n                {\r\n                    props.access &&\r\n                    <EditUsers {...props}/>\r\n                }\r\n                <BookingAdmin/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Admin;","import React, {useState, useEffect} from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport {Form, Transition, Button, Icon, Grid} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport './Book.css';\r\nimport 'semantic-ui-react';\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PromiseProvider } from 'mongoose';\r\nconst localizer = momentLocalizer(moment)\r\nconst gridWidth = 500;\r\nconst bookingEvents = (setMethod) => {\r\n    fetch(`/api/db/booking/`).then(\r\n            (response)=>{\r\n                (response.json().then(data =>{\r\n                    //console.log(data);\r\n                    var events = [];\r\n                    data.data.map(d=>{\r\n                        if(d.Visible == 1) {\r\n                            var displayDate = new Date(d.Date);\r\n                            displayDate = new Date(displayDate.setTime(displayDate.getTime() + 1 * 86400000));\r\n                            events.push(\r\n                                {\r\n                                    start: new Date(displayDate),\r\n                                    end: new Date(displayDate),\r\n                                    title: d.EventTitle+((d.Token)? \" by \"+d.Token : \"\"),\r\n                                    allDay: true,\r\n                                    email: d.Comment,\r\n                                    bid: d.Id,\r\n                                    paid: d.Paid,\r\n                                    name: d.Token,\r\n                                    eventTitle: d.EventTitle\r\n                                }\r\n                            )\r\n                        }  \r\n                    });\r\n                    setMethod(events);\r\n            }))\r\n    });\r\n}\r\nconst commitBooking = (event) => {\r\n    fetch(`/api/db/booking/commit`,{\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(event)\r\n    }).then(\r\n        (response)=>{\r\n            (response.json().then(data=>{\r\n                console.log(data);\r\n                if(data.success)\r\n                    alert(\"booking request successful. Admin has to confirm it.\");\r\n                else\r\n                    alert(\"something went wrong\");\r\n            }))\r\n        }\r\n    );\r\n}\r\n\r\n\r\nconst Book = ({selectProduct, userRole}) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [bookVisible, setBookVisible] = useState(false);\r\n    const [date, setDate] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const { isLoading, user, loginWithRedirect, logout} = useAuth0();\r\n    const history = useHistory();\r\n    const handlePurchase = (bid) => {\r\n        console.log(bid+\"is bid\");\r\n        selectProduct( {\r\n          name: 'Booking',\r\n          desc: `Booking fee`,\r\n          price: 9.99,\r\n          id: bid,\r\n          email: user.email\r\n        });\r\n        history.push('/Checkout');\r\n  }\r\n    const addEvent = () => {\r\n        if(!user) {\r\n            alert(\"You need to sign in!\");\r\n            return;\r\n        }\r\n        const event = {\r\n            token: user.name,\r\n\t        title: title,\r\n\t        comment:user.email,\r\n\t        date:date\r\n        }\r\n        setDate(\"\");\r\n        setTitle(\"\");\r\n        commitBooking(event);\r\n    }\r\n\r\n    const addStaticEvent = (event) => {\r\n        setEvents(events.concat(event));\r\n    }\r\n    if(events.length == 0) {\r\n        bookingEvents(setEvents);\r\n    }\r\n    if(!user)\r\n    return(<><h1>you need to sign in!</h1></>)\r\n    else\r\n    return (\r\n        <>\r\n        <p></p>\r\n        <Grid centered className=\"grid\" columns={1} verticalAlign=\"middle\" centered>\r\n            <Grid.Row>\r\n            {\r\n                events.map((event)=>{\r\n                    if(event.email == user.email && event.paid != 1)\r\n                    return(\r\n                        <>\r\n                            <div className=\"paymentBox\">\r\n                                <h1  className=\"paymentTitle\">Pending Payment</h1>\r\n                    <p>booking for {event.eventTitle} on {event.start.getFullYear()+\"/\"+(event.start.getMonth()+1)+\"/\"+event.start.getDate()}</p>\r\n                                <Button  positive onClick = {()=>handlePurchase(event.bid)}>Pay</Button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n            </Grid.Row>\r\n            <Grid.Row className=\"headerRow\" verticalAlign=\"middle\">\r\n                <Grid.Column width={10} textAlign=\"center\" verticalAlign=\"middle\">\r\n                    <div className=\"calendar\">\r\n                        <Calendar\r\n                        localizer={localizer}\r\n                        events={events}\r\n                        startAccessor=\"start\"\r\n                        endAccessor=\"end\"\r\n                        style={{ height: 500 }}\r\n                        />\r\n                    </div>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row className=\"headerRow\">\r\n                <Grid.Column width={8} textAlign=\"center\" verticalAlign=\"middle\">\r\n                    <Transition visible={bookVisible} animation=\"fly up\" duration={800} unmountOnHide={true}>\r\n                        <div className=\"popup\">\r\n                            <Form onSubmit={addEvent}>\r\n                                <Form.Group widths=\"equal\">\r\n                                    <Form.Input name='title' value={title} fluid label='Title' width={1} onChange={(event)=>setTitle(event.target.value)} value={title} required placeholder='Enter Title'/>\r\n                                </Form.Group>\r\n                                <Form.Group widths=\"equal\">\r\n                                    <Form.Input type=\"date\" name=\"date\" value={date} fluid label='Date' onChange={(event)=>setDate(event.target.value)} value={date} required placeholder='2020-03-31'></Form.Input>\r\n                                </Form.Group>\r\n                                <Form.Button  primary>Submit</Form.Button>\r\n                            </Form>\r\n                        </div>\r\n                    </Transition>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row className=\"headerRow\">\r\n                <Grid.Column width={gridWidth} textAlign=\"center\" verticalAlign=\"middle\" centered>\r\n                {bookVisible? <Button className=\"button\" onClick={()=>{setBookVisible(false);}}>Cancel</Button> : <Button className=\"button\" onClick={()=>{setBookVisible(true);}}><Icon fitted name='edit'/>Book Consultation</Button>}\r\n                </Grid.Column>\r\n                \r\n            </Grid.Row>\r\n            <Grid.Row className=\"headerRow\">\r\n                \r\n            </Grid.Row>\r\n           <Grid.Row>\r\n            {\r\n                ((userRole === \"guest\") || (userRole === \"subscriber\")) &&\r\n           \r\n                <div>\r\n                    <div className=\"signUp\">\r\n                        <h1>Premium User</h1>\r\n                        <h2>$10 / month</h2>\r\n                        <p></p>\r\n                        <Link to='/Subscribe'><Button positive  size=\"small\" className=\"button\">Become A Premium Member</Button></Link>\r\n                        <p></p>\r\n                        <p>Unlimited Recipe and Herb Glossary Access</p>\r\n                        <p>View All Online Videos and Classes</p>\r\n                    </div>\r\n                </div>\r\n            }\r\n            </Grid.Row>\r\n            <Grid.Row></Grid.Row>\r\n\r\n        </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\nimport \"./BrowseResults.css\";\r\nimport 'semantic-ui-react';\r\nimport {Modal, Button} from 'semantic-ui-react';\r\n\r\nconst BrowseResults = (props) => {\r\n    var temp = props.results != undefined ? \r\n    props.results.sort((a, b) => (a.Title.toLowerCase() > b.Title.toLowerCase()) ? 1 : -1) \r\n    : [];\r\n    const entries = temp.map((result, index) =>{\r\n        return(\r\n            <div key = {index} className = \"entry\">\r\n                <Modal size='small'  trigger={<h2 className=\"resultTitle\">{result.Title}</h2>}>\r\n                    <Modal.Header>{result.Title}</Modal.Header>\r\n                    <Modal.Content>\r\n                        <p> <b>Definition:</b> {result.Definition}</p>\r\n                        <p> <b>Usage:</b> {result.Usage}</p>\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <p className=\"tester\"> <b>Definition:</b> {result.Definition}</p>\r\n                <p> <b>Usage:</b> {result.Usage}</p>\r\n            </div>\r\n        );\r\n    });\r\n    return(\r\n        <div className = \"results\">\r\n            {entries}\r\n        </div>\r\n    );\r\n}\r\nexport default BrowseResults;","import React, {useState} from \"react\";\r\nimport {Button} from 'semantic-ui-react';\r\nimport 'semantic-ui-react';\r\nimport BrowseResults from \"../../components/BrowseResults\";\r\nimport Auth0 from \"./../../components/auth0\";\r\nimport \"./Browse.css\"\r\n\r\nconst Browse = (props) => {\r\n  const[results, setResults] = useState([]);\r\n    if(results.length == 0) props.defaultGlossary(setResults);\r\n    if (results.length > 3 && (props.userRole == \"guest\" || props.userRole === \"subscriber\")){\r\n        setResults(results.slice(0,3));\r\n    }\r\n    return(\r\n        <div className = \"glossary\">\r\n            <h1 className = \"glossaryTitle\">\r\n                Herb Glossary\r\n            </h1>\r\n            {\r\n                (props.userRole === \"guest\" || props.userRole === \"subscriber\") &&\r\n                <div className = \"NoAccount\">\r\n                <p>Make a Premium acccount to view this content!</p>\r\n                <Button positive  size=\"huge\" className=\"button\">Become A Premium Member</Button>\r\n                </div>\r\n            }\r\n            {\r\n                (props.userRole != \"guest\" && props.userRole != \"subscriber\") &&\r\n                <div className =\"searchBar\">\r\n                    <img src = \"logos/search.png\"/>\r\n                    <input type = \"text\" placeholder = \"Search For Herbs\" onChange = {e => props.searchGlossary(e, setResults)}/>\r\n                </div> \r\n            }\r\n            <BrowseResults\r\n                results = {results}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Browse;","import React, {useState, useEffect} from 'react';\r\nimport {Form, Transition, Button, Icon, Grid, Input, TextArea} from 'semantic-ui-react';\r\nimport 'semantic-ui-react';\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport JoditEditor from \"jodit-react\";\r\nimport Chat from './Chat.js'\r\nimport './Edit.css';\r\n\r\nconst writePost = (title, content, url, user, history) => {\r\n    if(!user) {\r\n        alert(\"you need to sign in!\");\r\n        return;\r\n    }\r\n    fetch(`http://127.0.0.1:5000/api/db/post/write`,{\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n        title:title,\r\n        content:content,\r\n        name:user.name,\r\n        username:user.nickname,\r\n        email:user.email,\r\n        url:url\r\n})\r\n    }).then((res)=>{\r\n        history.push(\"/Chat\")\r\n    })\r\n}\r\n\r\nconst editPost = (id, title, content, url, history) => {\r\n\r\n    fetch(`http://127.0.0.1:5000/api/db/post/edit/`+id,{\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n        title:title,\r\n        content:content,\r\n        url:url\r\n})\r\n    }).then((res)=>{\r\n        history.push(\"Chat/\"+id);\r\n    });;\r\n}\r\n\r\nconst readPostContent = (setMethod,id, setTitleMethod, setUrlMethod, setContentMethod) => {\r\n    fetch(`http://127.0.0.1:5000/api/db/post/`+id).then(\r\n            (response)=>{\r\n                (response.json().then(data =>{\r\n                    setMethod(data.data);\r\n                    setTitleMethod(data.data.title);\r\n                    setUrlMethod(data.data.url);\r\n                    setContentMethod(data.data.content);\r\n            }))\r\n    });\r\n}\r\n\r\nconst Edit = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [curPost, setCurPost] = useState({});\r\n    const { isLoading, user, loginWithRedirect, logout} = useAuth0();\r\n    const history = useHistory();\r\n    if(props.match.params.pid){\r\n        if(!curPost || !curPost.Id)\r\n            readPostContent(setCurPost, props.match.params.pid, setTitle, setUrl, setContent);\r\n    return(\r\n        <>\r\n        <p></p>\r\n        <Grid className=\"grid3\" centered>\r\n            <Grid.Row centered>\r\n                <h1 className=\"writeTitle\" >Edit Your Post!</h1>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row centered>\r\n                <Grid.Column width={9} centered>\r\n                    <div className=\"createPost\">\r\n                        <Form>\r\n                            <Input  className='writeInput' size='large' fluid value={title} onChange = {e => setTitle(e.target.value)} placeholder='Title'/>\r\n                            <Input  className='writeInput' size='large' fluid value={url} onChange = {e => setUrl(e.target.value)} placeholder='Youtube Url'/>\r\n                            <JoditEditor\r\n                            minHeight={400}\r\n                            value={content}\r\n                            tabIndex={1}\r\n\t\t                    onBlur={newContent => setContent(newContent)}\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Link to=\"/Chat\"><Button  size='massive' classname='writeButton' positive onClick={()=>{editPost(props.match.params.pid, title, content, url, history)}}>Post</Button></Link>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n\r\n            </Grid.Row>\r\n        </Grid>\r\n        </>\r\n    )\r\n    }\r\n    else\r\n    return(\r\n        <>\r\n        <p></p>\r\n        <Grid className=\"grid3\" centered>\r\n            <Grid.Row centered>\r\n                <h1 className=\"writeTitle\" >Create Your Post!</h1>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row centered>\r\n                <Grid.Column width={9} centered>\r\n                    <div className=\"createPost\">\r\n                        <Form>\r\n                            <Input  className='writeInput' size='large' fluid value={title} onChange = {e => setTitle(e.target.value)} placeholder='Title'/>\r\n                            <Input  className='writeInput' size='large' fluid value={url} onChange = {e => setUrl(e.target.value)} placeholder='Youtube Url'/>\r\n                            <JoditEditor\r\n                            minHeight={400}\r\n                            value={content}\r\n                            tabIndex={1}\r\n\t\t                    onBlur={newContent => setContent(newContent)}\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Button  size='massive' classname='writeButton' positive onClick={()=>{writePost(title, content, url, user, history)}}>Post</Button>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n\r\n            </Grid.Row>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className = \"footer\">\r\n            <div className = \"contactInfo\">\r\n                <ul>\r\n                    <li>\r\n                        <h4>Contact Info:</h4>\r\n                    </li>\r\n                    <li>\r\n                        Email: dee@considerherbs.com\r\n                    </li>\r\n                    <li>\r\n                        Phone: (352) 123 1234\r\n                    </li>\r\n                    <li>\r\n                        Facebook: Consider Herbs\r\n                    </li>\r\n                    <li>\r\n                        Instagram: considerherbs\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className = \"disclaimer\">\r\n                <img className = \"ce-logo\" src={ \"/logos/considerHerbsLogo.png\" } alt=\"React logo\" />\r\n                <p>\r\n                    Disclaimer: The information presented herein by Consider Herbs is intended for educational purposes only. These statements have not been evaluated by the FDA and are not intended to diagnose, cure, treat or prevent disease. Individual results may vary, and before using any supplements, it is always advisable to consult with your own healthcare provider.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './UserHome.css';\r\nimport {Form, Transition, Button, Icon, Grid, Comment, Segment, Sticky, Header} from 'semantic-ui-react';\r\nimport 'semantic-ui-react';\r\n\r\nconst UserHome = (props) => {\r\n    const [links, setLinks] = useState(null);\r\n    const [text, setText] = useState(null);\r\n    const [images, setImages] = useState(null);\r\n    const [products, setProducts] = useState(null);\r\n    const [shownLinks, setShownLinks] = useState(null);\r\n    const [shownText, setShownText] = useState(null);\r\n    const [shownImages, setShownImages] = useState(null);\r\n    const [shownProducts, setShownProducts] = useState(null);\r\n    if(!links)\r\n        props.getDbListings(\"links\", \"userHome\", setLinks);\r\n    if(!text)\r\n        props.getDbListings(\"text\", \"userHome\", setText);\r\n    if(!images)\r\n        props.getDbListings(\"images\", \"userHome\", setImages);\r\n    if(!products)\r\n        props.getDbListings(\"products\", \"userHome\", setProducts);\r\n    if(links && !shownLinks){\r\n        let format = links.filter(link => link.inUse);\r\n        setShownLinks(format.map((link, index) =>{\r\n            return(\r\n                <div key = {index} className=\"adminLinks\">\r\n                    <h1>{link.name}</h1>\r\n                    <embed src = {link.src} className=\"embedLink\"></embed>\r\n                    {\r\n                        <p className=\"linkCaption\">{link.caption}</p>\r\n                    }\r\n                </div>\r\n            );\r\n        }));\r\n    }\r\n    if(products && !shownProducts){\r\n        let format = products.filter(product => product.inUse);\r\n        setShownProducts(format.map((product, index) =>{\r\n            return(\r\n                <figure key = {index} className='figure'>\r\n                    <h3 className=\"productName\">{product.name}</h3>\r\n                    <img src = {product.src} alt= {product.alt}/>\r\n                    <figcaption>${product.price}</figcaption>\r\n                    <figcaption>{product.caption}</figcaption>\r\n                </figure>\r\n            );\r\n        }));\r\n    }\r\n    if(text && !shownText){\r\n        let format = text.filter(txt => txt.inUse);\r\n        setShownText(format.map((text, index) =>{\r\n            return(\r\n                <Grid.Column>\r\n                    <div key = {index} className=\"addText\">\r\n                        <h3 className=\"textTitle\">{text.title}</h3>\r\n                        <p className=\"textTitle\">{text.text}</p>\r\n                    </div> \r\n                </Grid.Column> \r\n            );\r\n        }));\r\n    }\r\n    if(images && !shownImages){\r\n        let format = images.filter(img => img.inUse);\r\n        setShownImages(format.map((image, index) =>{\r\n            return(\r\n                <div key = {index} className=\"img\">\r\n                    <div className='img2'>\r\n                        <img src = {image.src}  alt={image.alt} className=\"embedImg\"/>\r\n                    </div>\r\n                    <h2>{image.caption}</h2>\r\n                </div>\r\n            );\r\n        }));\r\n    }\r\n    return(\r\n        <div className=\"otherinspo\">\r\n            <div className=\"thanks1\">\r\n                <h1>Thank you for Considering Herbs, {props.user.name}! </h1>\r\n                <h3>For more inspiration on how you can use herbs in every day life, take a look at these websites and announcements.</h3>\r\n            </div>\r\n        \r\n            <div className=\"links\">\r\n                {shownLinks}\r\n            </div>\r\n            <div className=\"text\">\r\n                {shownText}\r\n            </div>\r\n            <div className=\"thanks\">\r\n                <h3 className=\"checkout\">Take a look at some fun images!</h3>\r\n            </div>\r\n            <div className=\"imgContainer\">\r\n                {shownImages}\r\n            </div>\r\n            <div className=\"thanks\">\r\n                <h3 className=\"checkout\">Check out these products I have been loving!</h3>\r\n            </div>\r\n\r\n            <div className = \"products\">\r\n                {shownProducts}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default UserHome;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  CardNumberElement,\r\n  CardExpiryElement,\r\n  CardCVCElement,\r\n  injectStripe\r\n} from 'react-stripe-elements'\r\nimport axios from 'axios'\r\nimport './CheckoutForm.scss'\r\n\r\nconst CheckoutForm = ({ selectedProduct, stripe, history }) => {\r\n    \r\n  \r\n    const [receiptUrl, setReceiptUrl] = useState('');\r\n    if (selectedProduct === null)\r\n        return (<>invalid</>)\r\n  \r\n    const handleSubmit = async event => {\r\n      event.preventDefault()\r\n  \r\n      const { token } = await stripe.createToken()\r\n  \r\n      const order = await axios.post('/api/payment/charge', {\r\n        amount: selectedProduct.price.toString().replace('.', ''),\r\n        source: token.id,\r\n        receipt_email: selectedProduct.email,\r\n        bid: selectedProduct.id\r\n      })\r\n  \r\n      setReceiptUrl(order.data.charge.receipt_url)\r\n    }\r\n    if (receiptUrl) {\r\n        return (\r\n          <div className=\"success\">\r\n            <h2>Payment Successful!</h2>\r\n            <a href={receiptUrl}>View Receipt</a>\r\n            <Link to=\"/\">Home</Link>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        \r\n        <div className=\"checkout-background\">\r\n          <div className=\"checkout-form\">\r\n            <p>Amount: ${selectedProduct.price}</p>\r\n            <form onSubmit={handleSubmit}>\r\n              <label>\r\n                Card details\r\n                <CardNumberElement />\r\n              </label>\r\n              <label>\r\n                Expiration date\r\n                <CardExpiryElement />\r\n              </label>\r\n              <label>\r\n                CVC\r\n                <CardCVCElement />\r\n              </label>\r\n              <button type=\"submit\" className=\"order-button\">\r\n                Pay\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    export default injectStripe(CheckoutForm)","const stripePublicKey = \"pk_test_9xbqkUZGpn89mzhDuQaRxJAd002TLcQLbB\"\r\nexport default stripePublicKey;","import React, { useEffect } from 'react';\r\nimport StripeScriptLoader from 'react-stripe-script-loader'\r\nimport { StripeProvider, Elements } from 'react-stripe-elements';\r\nimport CheckoutForm from './../../components/CheckoutForm';\r\nimport stripePublicKey from './../../config/stripeConfig';\r\n\r\nconst Checkout = ({ selectedProduct, history }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  return (\r\n    <StripeScriptLoader\r\n    uniqueId={stripePublicKey}\r\n    script=\"https://js.stripe.com/v3/\"\r\n    loader=\"Loading...\"\r\n  >\r\n    <StripeProvider apiKey={stripePublicKey}>\r\n      <Elements>\r\n        <CheckoutForm selectedProduct={selectedProduct} history={history} />\r\n      </Elements>\r\n    </StripeProvider>\r\n    </StripeScriptLoader>\r\n  )\r\n}\r\n\r\nexport default Checkout","import React, { useState } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\nimport 'semantic-ui-react';\r\nimport './NoAccount.css';\r\nimport Auth0 from './../../components/auth0';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nconst NoAccount = (props) => {\r\n    let route = (useRouteMatch());\r\n    return(\r\n            <div className = \"NoAccount\">\r\n        {\r\n            (route.path == \"/Book\") &&\r\n            <>\r\n                <p>Make an acccount to view this content!</p>\r\n                <Auth0 className = \"login\">Login</Auth0>\r\n            </>\r\n        }\r\n        {\r\n            (route.path == \"/Remedy\") &&\r\n            <div>\r\n                <p>Make a Premium acccount to view this content!</p>\r\n                <Button positive  size=\"huge\" className=\"button\">Become A Premium Member</Button>\r\n            </div>\r\n        }\r\n        {\r\n            (route.path == \"/Admin\") &&\r\n            <div>\r\n                <p>Sorry, you dont have access to this page :(</p>\r\n            </div>\r\n        }\r\n            </div>\r\n    );\r\n}\r\nexport default NoAccount;","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {CardElement,injectStripe} from 'react-stripe-elements'\r\nimport axios from 'axios'\r\nimport './CheckoutForm.scss'\r\n\r\nclass SubscriptionForm extends React.Component {\r\n\r\n    handleSubmit = async event => {\r\n      event.preventDefault();\r\n      console.log(this.props.user.email);\r\n      console.log(this.props.elements.getElement('card'));\r\n      const result = await this.props.stripe.createPaymentMethod({\r\n        type: 'card',\r\n        card: this.props.elements.getElement('card'),\r\n        billing_details: {\r\n          email: this.props.user.email\r\n        }\r\n      });\r\n      if (result.error) {\r\n        alert(\"error!\");\r\n      } else {\r\n        fetch('/api/payment/subscribe', {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            email: this.props.user.email,\r\n            payment_method: result.paymentMethod.id\r\n          }),\r\n        }).then((result)=> {\r\n          result.json().then((data)=>{\r\n            console.log(data);\r\n            if(data.error)\r\n              alert(\"error!\");\r\n            if(data.message)\r\n              this.props.setSuccess(true);\r\n              this.props.deleteAuthUserRole(this.props.user.sub,[this.props.userRole],this.props.config, this.props.access)\r\n              this.props.setAuthUserRole(this.props.user.sub,\"premium\",this.props.config, this.props.access);\r\n              this.props.setUserRole(\"premium\");\r\n          })\r\n        })\r\n      }\r\n    }\r\n    render(){\r\n      if(!this.props.user){\r\n        alert(\"only users can view this page.\");\r\n        return(<>please log in</>);\r\n      }\r\n      if(this.props.success)\r\n      return (\r\n        <div className=\"success\">\r\n        <h2>Congratulations! now you are a premium member.</h2>\r\n        <Link to=\"/\">Home</Link>\r\n      </div>\r\n      )\r\n      return (\r\n        \r\n        <div className=\"checkout-background\">\r\n          <p></p>\r\n          <center><h2 className=\"title\">Become a premium member today!</h2></center>\r\n          <div className=\"checkout-form\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label>\r\n                Card details\r\n                <CardElement class=\"thisiscardbro\"/>\r\n              </label>\r\n              <button type=\"submit\" className=\"order-button\">\r\n                Subscribe\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n    \r\n    export default injectStripe(SubscriptionForm)","import React, { useEffect, useState } from 'react';\r\nimport StripeScriptLoader from 'react-stripe-script-loader'\r\nimport { StripeProvider, Elements } from 'react-stripe-elements';\r\nimport SubscriptionForm from './../../components/SubscriptionForm';\r\nimport { useAuth0 } from \"../../react-auth0-spa\";\r\nimport stripePublicKey from './../../config/stripeConfig';\r\n\r\nconst Subscribe = (props) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n  const [success, setSuccess] = useState(false);\r\n  return (\r\n    <StripeScriptLoader\r\n    uniqueId={stripePublicKey}\r\n    script=\"https://js.stripe.com/v3/\"\r\n    loader=\"Loading...\"\r\n  >\r\n    <StripeProvider apiKey={stripePublicKey}>\r\n      <Elements>\r\n        <SubscriptionForm \r\n        user={props.user} \r\n        success={success} \r\n        setSuccess={setSuccess} \r\n        access = {props.access}\r\n        config = {props.config}\r\n        setAuthUserRole = {props.setAuthUserRole}\r\n        deleteAuthUserRole = {props.deleteAuthUserRole}\r\n        userRole = {props.userRole}\r\n        setUserRole = {props.setUserRole}\r\n        />\r\n      </Elements>\r\n    </StripeProvider>\r\n    </StripeScriptLoader>\r\n  )\r\n}\r\n\r\nexport default Subscribe","import React from 'react';\r\n\r\nimport './Loading.css';\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className = \"container\">\r\n            <img\r\n            className = \"loading\" \r\n            src=\"/logos/considerHerbsClear.jpg\"\r\n            alt=\"ConsiderHerbs logo\" />\r\n        </div>\r\n    );\r\n}\r\nexport default Loading;","import React, {useEffect, useState} from 'react';\r\nimport {Router, Route, Switch, Redirect  } from 'react-router-dom';\r\nimport Home from \"./views/Home/Home\";\r\nimport NotFound from \"./views/NotFound\";\r\nimport NavBar from \"./components/Header/NavBar\";\r\nimport Remedy from './views/Remedy/Remedy.js';\r\nimport Chat from \"./views/Chat/Chat.js\";\r\nimport Admin from './views/Admin/Admin.js';\r\nimport Book from './views/Book/Book.js'\r\nimport Browse from \"./views/Browse/Browse.js\"\r\nimport Edit from './views/Chat/Edit.js'\r\nimport Footer from \"./components/Footer\";\r\nimport UserHome from \"./views/UserHome/UserHome.js\";\r\nimport Checkout from \"./views/Checkout/Checkout\";\r\nimport NoAccount from \"./views/NoAccount/NoAccount\";\r\nimport Subscribe from \"./views/Checkout/Subscribe\";\r\nimport Loading from \"./components/Loading\";\r\nimport { useAuth0 } from \"./react-auth0-spa\";\r\nimport \"./App.css\"\r\nimport { createBrowserHistory } from 'history'\r\n\r\nconst defaultGlossary = (setResults) => {\r\n  fetch(`/api/db/glossary/`).then(\r\n          (response)=>{\r\n              (response.json().then(data =>{\r\n                  setResults(data.data);\r\n          }))\r\n  });\r\n}\r\nconst searchGlossary = (e, setResults) =>{\r\n  if (e.target.value.replace(/\\s/g,'') != ''){\r\n      fetch(`/api/db/glossary/search/${e.target.value}`).then(\r\n          (response)=>{\r\n              (response.json().then(data =>{\r\n                  setResults(data.data);\r\n              }))\r\n      });\r\n  }else defaultGlossary(setResults);\r\n}\r\nconst getContentDbListings = async (contentType, page, setListings) =>{\r\n  let requestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow'\r\n  };\r\n  let info;\r\n  fetch(`/api/db/${contentType.toLowerCase()}/page/${page}`, requestOptions)\r\n  .then(response => response.json().then(data=>{\r\n      if (data){\r\n        if(!Array.isArray(data.data))\r\n          setListings([data.data]);\r\n        else\r\n          setListings(data.data); \r\n      }\r\n  }));\r\n}\r\nconst updateContentDbListings = async (contentType, listingInfo) =>{\r\n  let requestOptions = {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(listingInfo)\r\n  };\r\n  fetch(`/api/db/${contentType.toLowerCase()}/update/${listingInfo.id}`, requestOptions)\r\n  .then(response => response.json().then(data => console.log(data)))\r\n  .catch(err => console.log(err));\r\n}\r\nconst deleteContentDbListings = async (contentType, id) =>{\r\n  let requestOptions = {\r\n    method: \"DELETE\",\r\n  };\r\n  fetch(`/api/db/${contentType.toLowerCase()}/delete/${id}`, requestOptions)\r\n  .then(response => {\r\n    response.text();\r\n    return response.text();\r\n  })\r\n  .catch(err => console.log(err));\r\n}\r\nconst addContentDbListings = async (contentType, listingInfo) =>{\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(listingInfo)\r\n    };\r\n    fetch(`/api/db/${contentType.toLowerCase()}/insert/`, requestOptions)\r\n    .then(response => response.json().then(data => console.log(data)))\r\n    .catch(err => console.log(err));\r\n  }\r\nconst deleteAuthUserRole = (userId,roles = [],config, access) => {\r\n  let roleId = roles.map((role) =>{\r\n    switch(role.toLowerCase()){\r\n      case \"admin\":\r\n        return config.adminId;\r\n      case \"subscriber\":\r\n        return config.subscriberId;\r\n      case \"premium\":\r\n        return config.premiumId;\r\n    }\r\n  });\r\n  //delete roles\r\n  fetch(`https://${config.domain}/api/v2/users/${userId}/roles`,{\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"authorization\": \"Bearer \" + access.access_token,\r\n            \"content-type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\"roles\": roleId})\r\n        })\r\n          .catch(rej=>console.log(rej)\r\n    );\r\n}\r\nconst defaultRecipe = (setResults) => {\r\n  fetch(`/api/db/recipe/extended`).then(\r\n          (response)=>{\r\n              (response.json().then(data =>{\r\n                  setResults(data.data);\r\n          }))\r\n  });\r\n}\r\n\r\nconst getRecipe = (id) => {\r\n  fetch(`/api/db/recipe/id/`+id).then(\r\n          (response)=>{\r\n              (response.json().then(data =>{\r\n                  const test = data.data.Ingredients.map(ingredient=>{\r\n                    return(\r\n                      <p>{ingredient.IngName}</p>\r\n                    );\r\n                      console.log(ingredient.IngName);\r\n                      console.log(ingredient.Amounut);\r\n                      console.log(ingredient.Units);\r\n                  })\r\n          }))\r\n  });\r\n}\r\n\r\nconst searchRecipeByBody = (e, setResults) =>{\r\n  if (e.target.value.replace(/\\s/g,'') != ''){\r\n      fetch(`/api/db/recipe/body/${e.target.value}`).then(\r\n          (response)=>{\r\n              (response.json().then(data =>{\r\n                  setResults(data.data);\r\n              }))\r\n      });\r\n  }else defaultRecipe(setResults);\r\n}\r\n\r\nconst searchRecipe = (e, setResults) =>{\r\n  if (e.target.value.replace(/\\s/g,'') != ''){\r\n      fetch(`/api/db/recipe/search/${e.target.value}`).then(\r\n          (response)=>{\r\n              (response.json().then(data =>{\r\n                  setResults(data.data);\r\n              }))\r\n      });\r\n  }else defaultRecipe(setResults);\r\n}\r\nconst setAuthUserRole = (userId,role,config, access) => {\r\n  let newRole;\r\n  switch(role.toLowerCase()){\r\n    case \"admin\":\r\n      newRole = config.adminId;\r\n      break;\r\n    case \"subscriber\":\r\n      newRole = config.subscriberId;\r\n      break;\r\n    case \"premium\":\r\n      newRole = config.premiumId;\r\n      break;\r\n  }\r\n  //add new users here\r\n  fetch(`https://${config.domain}/api/v2/roles/${newRole}/users`,{\r\n    method:\"POST\",\r\n    headers: {\r\n      authorization: \"Bearer \" + access.access_token,\r\n    \"content-type\": \"application/json\"},\r\n    body: JSON.stringify({users: [userId]})\r\n  })\r\n  .then(res => {\r\n    res.json().then(data => {\r\n  })\r\n  console.log(res)})\r\n  .catch(rej=>console.log(rej));\r\n}\r\n\r\nconst getAuthUserRole = (userId, config, setRole, access) => {\r\n  //get a list of users\r\n  fetch(`https://${config.domain}/api/v2/users/${userId}/roles`,{\r\n    headers: {authorization: \"Bearer \" + access.access_token}\r\n  }).then(res => res.json().then(data => {\r\n      if(data.length > 0){\r\n        setRole(data[0].name.toLowerCase());\r\n      }\r\n      else{\r\n        setRole(\"subscriber\");\r\n        setAuthUserRole(userId, \"subscriber\", config, access);\r\n      }\r\n  })).catch(rej=>console.log(rej));\r\n}\r\nconst history = createBrowserHistory();\r\n\r\n\r\nconst App = (props) => {\r\n  const { loading, user, isAuthenticated} = useAuth0();\r\n  const [userRole, setUserRole] = useState(\"guest\");\r\n  const [access, setAccess] = useState(null);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const config = props.config;\r\n\r\n  if (loading) {\r\n    return <Loading/>;\r\n  }\r\n\r\n  //pages tier system\r\n  const TheHome = isAuthenticated ? UserHome : Home;\r\n  const TheRemedy = (isAuthenticated && (userRole === \"admin\" || userRole === \"premium\")) ? Remedy : NoAccount; \r\n  const TheBooking = isAuthenticated ? Book : NoAccount;\r\n  const TheAdmin = (isAuthenticated && userRole === \"admin\") ? Admin : NoAccount;\r\n\r\n  if (!access){\r\n    fetch('/auth/access')\r\n    .then(res=>res.json().then(data => setAccess(data)))\r\n    .catch(reas=>console.log(reas));\r\n  }\r\n  if (access && isAuthenticated){\r\n    //get the users role\r\n    getAuthUserRole(user.sub, config, setUserRole, access);\r\n  }\r\n  return (\r\n    <div>\r\n      <NavBar isAuthenticated = {isAuthenticated} \r\n        user = {user} \r\n        userRole = {userRole}\r\n        domain = {config.domain}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n         <Redirect to=\"/Home\" />\r\n        </Route>\r\n        <Route path = \"/Home\" render = {(props) => <TheHome\r\n          user = {user}\r\n          getDbListings = {getContentDbListings}\r\n        />}></Route>\r\n        <Route exact path=\"/Register\" component={Remedy} />\r\n        <Route path = \"/Remedy\" render = {(props) => <TheRemedy\r\n        searchRecipeByBody = {searchRecipeByBody}\r\n        searchRecipe = {searchRecipe}\r\n        defaultRecipe = {defaultRecipe}\r\n        getRecipe = {getRecipe}\r\n        />}></Route>\r\n        <Route path = \"/Admin\" render = {(props) => <TheAdmin\r\n        defaultGlossary = {defaultGlossary}\r\n        searchGlossary = {searchGlossary}\r\n        access = {access}\r\n        config = {config}\r\n        isAuthenticated = {isAuthenticated}\r\n        user = {user}\r\n        userRole = {userRole}\r\n        getAuthUserRole = {getAuthUserRole}\r\n        deleteAuthUserRole = {deleteAuthUserRole}\r\n        setAuthUserRole = {setAuthUserRole}\r\n        getDbListings = {getContentDbListings}\r\n        updateDbListings = {updateContentDbListings}\r\n        deleteDbListings = {deleteContentDbListings}\r\n        addDbListings = {addContentDbListings}\r\n        />}></Route>\r\n        <Route exact path = \"/Book\" render={()=>(<TheBooking \r\n        selectProduct={setSelectedProduct}\r\n        userRole = {userRole}\r\n        />)}></Route>\r\n        <Route exact path = \"/Chat\" render = {() => <Chat\r\n          user = {user}\r\n          userRole = {userRole}\r\n        />}></Route>\r\n        <Route path = \"/Chat/:pid\" render = {() => <Chat\r\n          user = {user}\r\n          userRole = {userRole}\r\n        />}></Route>\r\n        <Route exact path = \"/Write\" component = {Edit}></Route>\r\n        <Route path = \"/Edit/:pid\" component = {Edit}></Route>\r\n        <Route exact path=\"/Remedy\" component={TheRemedy}/>\r\n        <Route path = \"/Browse\" render = {(props) => <Browse\r\n        searchGlossary = {searchGlossary}\r\n        defaultGlossary = {defaultGlossary}\r\n        userRole = {userRole}\r\n        />}></Route>\r\n        <Route path =\"/Checkout\"\r\n              render={()=> (<Checkout selectedProduct={selectedProduct}/>)}/>\r\n        <Route exact path = \"/Subscribe\"  render = {() => <Subscribe\r\n          user = {user}\r\n          userRole = {userRole}\r\n          config = {config}\r\n          access = {access}\r\n          setAuthUserRole = {setAuthUserRole}\r\n          deleteAuthUserRole = {deleteAuthUserRole}\r\n          setUserRole = {setUserRole}\r\n        />}></Route>\r\n        <Route component={NotFound}/>\r\n      </Switch>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","// src/index.js\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport history from \"./utils/history\";\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nlet config = {};\r\nfetch(`/auth`).then(res =>{\r\n  res.json().then(data => {\r\n    config = data;\r\n  }).then(() => {\r\n    ReactDOM.render(\r\n      <Auth0Provider\r\n        audience = {config.audience}\r\n        domain={config.domain}\r\n        client_id={config.clientId}\r\n        redirect_uri={window.location.origin}\r\n        onRedirectCallback={onRedirectCallback}\r\n      >\r\n        <Router>\r\n        <App config = {config}/>\r\n        </Router>\r\n      </Auth0Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  })\r\n})\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}